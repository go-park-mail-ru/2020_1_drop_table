// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// Repository is an autogenerated mock type for the Repository type
type Repository struct {
	mock.Mock
}

// GetSurveyTemplate provides a mock function with given fields: ctx, cafeId
func (_m *Repository) GetSurveyTemplate(ctx context.Context, cafeId int) (string, error) {
	ret := _m.Called(ctx, cafeId)

	var r0 string
	if rf, ok := ret.Get(0).(func(context.Context, int) string); ok {
		r0 = rf(ctx, cafeId)
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, int) error); ok {
		r1 = rf(ctx, cafeId)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// SetSurveyTemplate provides a mock function with given fields: ctx, _a1, id, cafeOwnerID
func (_m *Repository) SetSurveyTemplate(ctx context.Context, _a1 string, id int, cafeOwnerID int) error {
	ret := _m.Called(ctx, _a1, id, cafeOwnerID)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string, int, int) error); ok {
		r0 = rf(ctx, _a1, id, cafeOwnerID)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// SubmitSurvey provides a mock function with given fields: ctx, surv, customerID
func (_m *Repository) SubmitSurvey(ctx context.Context, surv string, customerID string) error {
	ret := _m.Called(ctx, surv, customerID)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string, string) error); ok {
		r0 = rf(ctx, surv, customerID)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// UpdateSurveyTemplate provides a mock function with given fields: ctx, _a1, id
func (_m *Repository) UpdateSurveyTemplate(ctx context.Context, _a1 string, id int) error {
	ret := _m.Called(ctx, _a1, id)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string, int) error); ok {
		r0 = rf(ctx, _a1, id)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
