// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import (
	cafe "2020_1_drop_table/internal/app/cafe/delivery/grpc/protobuff"
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// CafeGRPCHandlerServer is an autogenerated mock type for the CafeGRPCHandlerServer type
type CafeGRPCHandlerServer struct {
	mock.Mock
}

// GetByID provides a mock function with given fields: _a0, _a1
func (_m *CafeGRPCHandlerServer) GetByID(_a0 context.Context, _a1 *cafe.ID) (*cafe.Cafe, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *cafe.Cafe
	if rf, ok := ret.Get(0).(func(context.Context, *cafe.ID) *cafe.Cafe); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*cafe.Cafe)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *cafe.ID) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetByOwnerID provides a mock function with given fields: _a0, _a1
func (_m *CafeGRPCHandlerServer) GetByOwnerID(_a0 context.Context, _a1 *cafe.ID) (*cafe.ListCafe, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *cafe.ListCafe
	if rf, ok := ret.Get(0).(func(context.Context, *cafe.ID) *cafe.ListCafe); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*cafe.ListCafe)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *cafe.ID) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
